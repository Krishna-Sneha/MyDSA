//Stack operations using C Language
#include<stdio.h>
#include<stdlib.h>

struct stack{
    int size;
    int top;
    int* A;
};

void Create(struct stack* s, int size)
{
    s->size = size;
    s->top = -1;
    s->A = (int *)malloc(s->size * sizeof(int));
}

void Push(struct stack* s, int ele)
{
    if(s->top == s->size-1)
    {
        printf("Stack Overflow!\n");
        return;
    }

    s->top++;
    s->A[s->top] = ele;
}

int Pop(struct stack* s)
{
    int ele = -1;

    if(s->top == -1)
    {
        printf("Stack Underflow!\n");
        return ele;
    }

    ele = s->A[s->top];
    s->top--;

    return ele;
}

void Display(struct stack* s)
{
    for(int i=s->top; i>=0; i--)
    {
        printf("%d\t",s->A[i]);
    }
    printf("\n");
    
}

int main()
{
    struct stack s;
    int size,ele;
    int option;
    int extra;
    s.top = -2;
    do
    {
        printf("Stack size: %d\tUsed space: %d\n",s.size, s.top+1);
        printf("Enter 0 to create stack.\n");
        printf("Enter 1 to push.\n");
        printf("Enter 2 to pop.\n");
        printf("Enter 3 to display.\n");
        printf("Enter 4 to peek.\n");
        printf("Enter 5 to extend the size.\n");
        printf("Enter 6 to exit!\n");
        printf("Your Option: ");
        scanf("%d",&option);
    
    
    switch(option)
    {
        case 0:
        {
            printf("Enter the size of stack: ");
            scanf("%d",&size);

            Create(&s, size);
            break;
        }
        case 1:
        {
            if(s.top == -2) printf("Please first create the stack!\n");
            else
            {
                printf("How many elements you want to enter: ");
                scanf("%d",&size);
                printf("Enter %d elements: ",size);
                for(int i=0; i<size; i++)
                {
                    scanf("%d",&ele);
                    Push(&s, ele);
                }
            }
            break;
        }
        
        case 2:
        {
            if(s.top == -2) printf("Please first create the stack!\n");
            else
            {
                printf("Popped %d\n", Pop(&s));
            }
            break;
        }
        
        case 3:
        {
            if(s.top == -2) printf("Please first create the stack!\n");
            else
            {
                printf("The values in stack\n");
                Display(&s);
            }
            break;
        }
        
        case 4:
        {
            if(s.top == -2)
                printf("Nothing to show!\n");
            else
                printf("The top most value is %d\n",s.A[s.top]);
            break;
        }
        
        case 5: 
        {
            if(s.top == -2) printf("Please first create the stack!\n");
            else
            {
                printf("Enter the size to be extended: ");
                scanf("%d",&extra);
                s.size += extra;
            }
            break;
        }
        
        case 6: break;
        
        default: printf("Please Enter correct Option!\n");
                 break;
    }
    
    }while(option != 6);
    printf("Bye!");
    

    // free(s.A);

    return 0;
}
